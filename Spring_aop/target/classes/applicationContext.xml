<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
">
    <context:component-scan base-package="com.yuye.aop" />
    <bean id="target" class="com.yuye.aop.Target"></bean>
    <bean id="myAspect" class="com.yuye.aop.MyAspect"></bean>
    <!--配置注入，告诉spring框架框架 那些方法（切点）需要进行那些增强-->
    <aop:config>
        <!--抽取切点表达式-->
        <aop:pointcut id="myPointcut" expression="execution(public void com.yuye.aop.Target.save())" />
        <!--告诉spring切面时什么-->
        <aop:aspect ref="myAspect" >
            <!--告诉spring用切面的什么方法给切点怎么增强-->
            <aop:before method="before"  pointcut="execution(public void com.yuye.aop.Target.save())" />
            <!--修饰符可写可不写-->
            <aop:after-returning method="after_returning"  pointcut="execution(void com.yuye.aop.Target.save())" />
            <!--*可以替换方法返回值、包名、类名、方法名表示任意   包名与类名之间的一个点。代表当前包下的类，两个点。。表示当前包及其子包下的类-->
            <!--<aop:around method="around"  pointcut="execution( void com.yuye.aop.*.save())" />-->
            <!--参数列表可以使用两个点。。表示任意个数，任意类型的参数列表-->
            <aop:around method="around"  pointcut="execution( * com.yuye.aop.*.*(..))" />
            <aop:after-throwing method="after_throwing"  pointcut-ref="myPointcut" />
            <!--不管什么异常 after增强一定执行-->
            <aop:after method="after"   pointcut-ref="myPointcut" />
        </aop:aspect>
    </aop:config>
</beans>